# Ultralytics YOLO ?, AGPL-3.0 license
# YOLO11 object detection model with P3-P5 outputs. For Usage examples see https://docs.ultralytics.com/tasks/detect

# Parameters
nc: 80 # number of classes
scales: # model compound scaling constants, i.e. 'model=yolov8n.yaml' will call yolov8.yaml with scale 'n'
  # [depth, width, max_channels]
  n: [0.33, 0.25, 1024] # YOLOv8n summary: 225 layers,  3157200 parameters,  3157184 gradients,   8.9 GFLOPs
  s: [0.33, 0.50, 1024] # YOLOv8s summary: 225 layers, 11166560 parameters, 11166544 gradients,  28.8 GFLOPs
  m: [0.67, 0.75, 768] # YOLOv8m summary: 295 layers, 25902640 parameters, 25902624 gradients,  79.3 GFLOPs
  l: [1.00, 1.00, 512] # YOLOv8l summary: 365 layers, 43691520 parameters, 43691504 gradients, 165.7 GFLOPs
  x: [1.00, 1.25, 512] # YOLOv8x summary: 365 layers, 68229648 parameters, 68229632 gradients, 258.5 GFLOPs
scale: n




# YOLO11n backbone
backbone:
  # [from, repeats, module, args]
  # Two Stream
  ######### TransformerBlock One #############
  # stream one
  - [-1, 1, Conv, [64, 3, 2]] # 0-P1/2
  - [-1, 1, Conv, [128, 3, 2]] # 1-P2/4
  - [-1, 3, C2f, [128, True]]
  # stream two
  - [-4, 1, Conv, [64, 3, 2]] # 3-P1/2
  - [ -1, 1, Conv, [ 128, 3, 2 ] ] # 4-P2/4
  - [ -1, 3, C2f_Faster, [ 128,True] ] # 5-P2/4
  # transformer fusion
  - [ [ 2,5 ], 1, GPT, [ 128 ] ] # 6-P2/4
  - [ [ 2,6 ], 1, Add2, [ 128,0 ] ]  # 7-P2/4 stream one:x+trans[0]
  - [ [ 5,6 ], 1, Add2, [ 128,1 ] ]  # 8-P2/4 stream two:x+trans[1]
  ######### TransformerBlock Two #############
  # stream one
  - [7, 1, Conv, [256, 3, 2]] # 9-P3/8
  - [-1, 6, C2f, [256, True]] # 10-P3/8
  # stream two
  - [ 8, 1, Conv, [ 256, 3, 2 ] ] # 11-P3/8
  - [ -1, 6, C2f_Faster, [ 256, True ] ] # 12-P3/8
  # transformer fusion
  - [ [ 10,12 ], 1, GPT, [ 256 ] ]   # 13-P3/8
  - [ [ 10,13 ], 1, Add2, [ 256,0 ] ]    # 14-P3/8 stream one x+trans[0]
  - [ [ 12,13 ], 1, Add2, [ 256,1 ] ]    # 15-P3/8 stream two x+trans[1]
  ######### TransformerBlock Three #############
  # stream one
  - [14, 1, Conv, [512, 3, 2]] # 16-P4/16
  - [-1, 6, C2f, [512, True]] # 17-P4/16
  - [-1, 1, SPPF, [512, 5]] # 18-P4/16
  # stream two
  - [ 15, 1, Conv, [ 512, 3, 2 ] ] # 19-P4/16
  - [ -1, 6, C2f_Faster, [ 512, True ] ] # 20-P4/16
  - [-1, 1, SPPF, [512, 5]] # 21-P4/16
  # transformer fusion
  - [ [ 18,21 ], 1, GPT, [ 512 ] ]   # 22-P4/16
  - [ [ 18,22 ], 1, Add2, [ 512,0 ] ]    # 23-P4/16 stream one x+trans[0]
  - [ [ 21,22 ], 1, Add2, [ 512,1 ] ]    # 24-P4/16 stream two x+trans[1]
  ######### Add Block #############
  - [ [ 7,8 ], 1, Add, [ 1 ] ]   # 25-P3/4 fusion backbone P2
  - [ [ 14,15 ], 1, Add, [ 1 ] ]   # 26-P3/8 fusion backbone P3
  - [ [ 23,24 ], 1, Add, [ 1 ] ]   # 27-P4/16 fusion backbone P4

# YOLO11n head
head:

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]] # 28
  - [[-1, 26], 1, Concat, [1]] # 29 cat backbone P3
  - [-1, 3, C2f, [256]] # 30 (P3/8-small)

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]] # 31
  - [[-1, 25], 1, Concat, [1]] # 32 cat backbone P2
  - [-1, 3, C2f, [128]] # 33(P2/4-xsmall)

  - [ -1, 1, Conv, [ 128, 3, 2 ] ] # 34
  - [ [ -1, 30 ], 1, Concat, [ 1 ] ] # 35 cat head P3
  - [ -1, 3, C2f, [ 256 ] ] # 36 (P3/8-small)

  - [-1, 1, Conv, [256, 3, 2]] # 37
  - [[-1, 27], 1, Concat, [1]] # 38 cat head P4
  - [-1, 3, C2f, [512]] # 39 (P4/16-medium)


  - [[33, 36, 39], 1, Detect_yolov11, [nc]] # 40 Detect(P2, P3, P4)
